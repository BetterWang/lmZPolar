#ifndef __LmZPolarConst_
#define __LmZPolarConst_

#include<vector>
#include<TH1D.h>

// Lambda
// pt                        0,   1,   2,   3,   4,   5,   6,   7,   8,   9,  10,  11,  12
  double pTbin[14] = {0.2, 0.4, 0.6, 0.8, 1.0, 1.4, 1.8, 2.2, 2.8, 3.6, 4.6, 6.0, 7.0, 8.5};
  double pTX[13]   = {     0.3, 0.5, 0.7, 0.9, 1.2, 1.6, 2.0, 2.5, 3.2, 4.1, 5.3, 6.5, 7.7};
  const int NpT = 13;

  double pTX_pPb[10][13] = { { 0. }, // 0
                            { 0. }, // 1
                            { 0. }, // 2
                            { 0. }, // 3
                            { 0. }, // 4
                            { 0. }, // 5
// pt                           0,   1,   2,        3,       4,       5,       6,      7,       8,       9,      10,      11,      12
                            { 0.3, 0.5, 0.7, 0.919676, 1.22086, 1.60063, 1.99537, 2.48138, 3.155,   4.0098,  5.12851, 6.41858, 7.59514 }, // 6
                            { 0.3, 0.5, 0.7, 0.920057, 1.22199, 1.60119, 1.99588, 2.48221, 3.15601, 4.01076, 5.12741, 6.41806, 7.59117 }, // 7
                            { 0.3, 0.5, 0.7, 0.920377, 1.22286, 1.60241, 1.99664, 2.4835,  3.15698, 4.01133, 5.12781, 6.41746, 7.59221 }, // 8
                            { 0.3, 0.5, 0.7, 0.920577, 1.22367, 1.60318, 1.99717, 2.48396, 3.15789, 4.0111,  5.12567, 6.41772, 7.59383 }, // 9
                          };

  double pTX_PbPb[5][13] = {
// pt                           0,   1,   2,   3,   4,   5,       6,      7,       8,       9,      10,      11,      12
                            { 0.3, 0.5, 0.7, 0.9, 1.2, 1.6, 2.03272, 2.49625, 3.14723, 3.98833, 5.09608, 6.41779, 7.60467}, // 0 same as 1
                            { 0.3, 0.5, 0.7, 0.9, 1.2, 1.6, 2.03272, 2.49625, 3.14723, 3.98833, 5.09608, 6.41779, 7.60467}, // 1
                            { 0.3, 0.5, 0.7, 0.9, 1.2, 1.6, 2.03427, 2.48903, 3.14459, 3.99442, 5.10739, 6.42224, 7.62256}, // 2
                            { 0.3, 0.5, 0.7, 0.9, 1.2, 1.6, 2.02823, 2.49377, 3.14903, 4.00308, 5.12125, 6.42897, 7.61581}, // 3
                            { 0.3, 0.5, 0.7, 0.9, 1.2, 1.6, 2.02482, 2.49932, 3.15498, 4.01724, 5.13419, 6.43147, 7.62483}  // 4
                            };
// PbPb 2018
// CentBin                      0,  1,   2,   3,   4,   5,   6,   7,   8,   9,   10,   11,   12,   13,   14,   15,   16,  17
  const double CentPbPb2018[] = {0, 10,  20,  30,  40,  50,  60,  70,  80,  90,  100,  110,  120,  130,  140,  150,  160, 200};
  const double CentPbPbX[]   = {  2.5, 7.5,12.5,17.5,22.5,27.5,32.5,37.5,42.5, 47.5, 52.5, 57.5, 62.5, 67.5, 72.5, 77.5, 90.};
  const char* strCentPbPb[] = {
    "0-5",   // 0
    "5-10",  // 1
    "10-15", // 2
    "15-20", // 3
    "20-25", // 4
    "25-30", // 5
    "30-35", // 6
    "35-40", // 7
    "40-45", // 8
    "45-50", // 9
    "50-55", // 10
    "55-60", // 11
    "60-65", // 12
    "65-70", // 13
    "70-75", // 14
    "75-80", // 15
    "80-100" // 16
  };

  const int NCentPbPb2018 = 17;

// CentBin  Rebin                         0,  1,   2,   3,   4
  const int CentCutPbPb2018Rebin[] = {0, 10,  20, 60, 100, 160};
  const double CentPbPbXRebin[]    = {  2.5, 7.5, 20,  40,  65};

  const int NCentPbPb2018Rebin = 5;
  const char* strCentPbPbRebin[] = {
    "0-5",   // 0
    "5-10",  // 1
    "10-30", // 2
    "30-50", // 3
    "50-80", // 4
  };

  std::vector< std::vector<int> > vectReCent{{0}, {1}, {2, 3, 4, 5}, {6, 7, 8, 9}, {10, 11, 12, 13, 14, 15}};

// pPb 2016
//                                                        MB    /     HM0 / HM1/ HM7
//                                        0,  1,  2,  3,  4,   5,   6,   7,   8,   9,  10,  11,  12,  13, 14, 15, 16, 17,
  const double CentNoffCutPA8TeV4[] = {0, 10, 30, 50, 70, 90, 120, 150, 185, 250, 600};
  const double CentPPbX4[] =          {   5,  20, 40, 60, 80, 105, 135, 167, 200, 275};

  const char* strCentpPb[] = {
    "0-10",    // 0
    "10-30",   // 1
    "30-50",   // 2
    "50-70",   // 3
    "70-90",   // 4
    "90-120",  // 5
    "120-150", // 6
    "150-185", // 7
    "185-250", // 8
    "250-600", // 9
  };

  const int NCentpPb2016 = 10;

// mass window
  const double Lm_mass_min = 1.0800;
  const double Lm_mass_max = 1.1600;
  const double Lm_sig_min  = 1.1115;
  const double Lm_sig_max  = 1.1200;
  const int Lm_sig_min_Bin = 64;
  const int Lm_sig_max_Bin = 80; // sig mass range [64, 80]
  const int    N_LmBins    = 160;

  const double Lm_SBNeg = 1.1095;
  const int    Lm_SBNeg_Bin = 59; // [1, 59]
  const double Lm_SBPos = 1.1220;
  const int    Lm_SBPos_Bin = 85; // [85, 160]

                                    //      SBNeg, MixNeg, signal, MixPos,  SBPos
  const double Lm_mass_ranges[] = {1.0800, 1.1095, 1.1115, 1.1200, 1.1220, 1.1600};

#endif
